apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: pipeline-flip-coin-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.9, pipelines.kubeflow.org/pipeline_compilation_time: '2021-11-17T11:37:42.129215',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "shows how to use dsl.Condition.",
      "name": "pipeline flip coin"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.9}
spec:
  entrypoint: pipeline-flip-coin
  templates:
  - name: condition-1
    outputs:
      parameters:
      - name: flip-again-output
        valueFrom: {parameter: '{{tasks.flip-again.outputs.parameters.flip-again-output}}'}
    dag:
      tasks:
      - name: condition-2
        template: condition-2
        when: '"{{tasks.flip-again.outputs.parameters.flip-again-output}}" == "tails"'
        dependencies: [flip-again]
        arguments:
          parameters:
          - {name: flip-again-output, value: '{{tasks.flip-again.outputs.parameters.flip-again-output}}'}
      - {name: flip-again, template: flip-again}
  - name: condition-2
    inputs:
      parameters:
      - {name: flip-again-output}
    dag:
      tasks:
      - name: print1
        template: print1
        arguments:
          parameters:
          - {name: flip-again-output, value: '{{inputs.parameters.flip-again-output}}'}
  - name: condition-3
    inputs:
      parameters:
      - {name: flip-again-output}
    dag:
      tasks:
      - name: print2
        template: print2
        arguments:
          parameters:
          - {name: flip-again-output, value: '{{inputs.parameters.flip-again-output}}'}
  - name: flip
    container:
      args: ['python -c "import random; result = ''heads'' if random.randint(0,1)
          == 0 else ''tails''; print(result)" | tee /tmp/output']
      command: [sh, -c]
      image: python:alpine3.6
    outputs:
      parameters:
      - name: flip-output
        valueFrom: {path: /tmp/output}
      artifacts:
      - {name: flip-output, path: /tmp/output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.9
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: flip-again
    container:
      args: ['python -c "import random; result = ''heads'' if random.randint(0,1)
          == 0 else ''tails''; print(result)" | tee /tmp/output']
      command: [sh, -c]
      image: python:alpine3.6
    outputs:
      parameters:
      - name: flip-again-output
        valueFrom: {path: /tmp/output}
      artifacts:
      - {name: flip-again-output, path: /tmp/output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.9
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: pipeline-flip-coin
    dag:
      tasks:
      - name: condition-1
        template: condition-1
        when: '"{{tasks.flip.outputs.parameters.flip-output}}" == "heads"'
        dependencies: [flip]
      - name: condition-3
        template: condition-3
        when: '"{{tasks.flip.outputs.parameters.flip-output}}" == "tails"'
        dependencies: [condition-1, flip]
        arguments:
          parameters:
          - {name: flip-again-output, value: '{{tasks.condition-1.outputs.parameters.flip-again-output}}'}
      - {name: flip, template: flip}
  - name: print1
    container:
      command: [echo, '{{inputs.parameters.flip-again-output}}']
      image: alpine:3.6
    inputs:
      parameters:
      - {name: flip-again-output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.9
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: print2
    container:
      command: [echo, '{{inputs.parameters.flip-again-output}}']
      image: alpine:3.6
    inputs:
      parameters:
      - {name: flip-again-output}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.9
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  arguments:
    parameters: []
  serviceAccountName: pipeline-runner
